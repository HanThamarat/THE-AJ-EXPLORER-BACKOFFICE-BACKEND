# -----------------------
# 1️⃣ BUILD STAGE
# -----------------------
FROM node:lts-slim AS builder

WORKDIR /app

# Copy package files and install all deps (including dev)
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Generate Prisma client and build TS
RUN npx prisma generate
RUN npm run build

# Remove dev deps to reduce size
RUN npm prune --omit=dev

# -----------------------
# 2️⃣ RUN STAGE
# -----------------------
FROM node:lts-slim AS production

# Set environment variables
ARG PORT
ENV PORT=${PORT}

ARG JWT_SECRET
ENV JWT_SECRET=${JWT_SECRET}

ARG API_DOC_URL
ENV API_DOC_URL=${API_DOC_URL}

ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

ARG DIRECT_URL
ENV DIRECT_URL=${DIRECT_URL}

ARG AUTH_SECRET
ENV AUTH_SECRET=${AUTH_SECRET}

ARG AUTH_GOOGLE_ID
ENV AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}

ARG AUTH_GOOGLE_SECRET
ENV AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}

ARG MAILER_EMAIL
ENV MAILER_EMAIL=${MAILER_EMAIL}

ARG MAILER_PASSWORD
ENV MAILER_PASSWORD=${MAILER_PASSWORD}

ARG MAILER_PORT
ENV MAILER_PORT=${MAILER_PORT}

ARG BUCKET_BASE_URL
ENV BUCKET_BASE_URL=${BUCKET_BASE_URL}

ARG REDIS_HOST
ENV REDIS_HOST=${REDIS_HOST}

ARG REDIS_PORT
ENV REDIS_PORT=${REDIS_PORT}

ARG REDIS_PASSWORD
ENV REDIS_PASSWORD=${REDIS_PASSWORD}

ARG OMISE_PUBLIC_KEY
ENV OMISE_PUBLIC_KEY=${OMISE_PUBLIC_KEY}

ARG OMISE_SECRET_KEY
ENV OMISE_SECRET_KEY=${OMISE_SECRET_KEY}

WORKDIR /app

# Copy built output and only necessary files
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/package*.json ./

EXPOSE 3000

# Start app
CMD ["npm", "run", "start:migrate:prod"]
